import datetime
import os
from typing import Type
import pydantic
from typing.io import TextIO

from .base_agent import BaseMTA
from ..list_providers import BaseListProvider


class PostfixAgentPathsConfig(pydantic.BaseModel):
    transport_maps: str = "/etc/porcumail/postfix/transport_maps"
    local_recipient_maps: str = "/etc/porcumail/postfix/local_recipient_maps"
    virtual_mailbox_maps: str = "/etc/porcumail/postfix/virtual_mailbox_maps"
    smtpd_sender_login_maps: str = "/etc/porcumail/postfix/smtpd_sender_login_maps"


class PostfixAgentConfig(pydantic.BaseModel):
    paths: PostfixAgentPathsConfig


class PostfixMTA(BaseMTA):
    def __init__(self, list_provider: BaseListProvider, config: "ConfigInstance"):
        super().__init__(list_provider, config)
        self.reconfigure()

    @staticmethod
    def get_config_class() -> Type[PostfixAgentConfig]:
        return PostfixAgentConfig

    def _check_dirs(self):
        os.makedirs(os.path.dirname(self._config.mta.config.paths.transport_maps), exist_ok=True)
        os.makedirs(os.path.dirname(self._config.mta.config.paths.local_recipient_maps), exist_ok=True)
        os.makedirs(os.path.dirname(self._config.mta.config.paths.virtual_mailbox_maps), exist_ok=True)
        os.makedirs(os.path.dirname(self._config.mta.config.paths.smtpd_sender_login_maps), exist_ok=True)

    def _update_maps(self):
        os.system(f"/usr/sbin/postmap {self._config.mta.config.paths.transport_maps}")
        os.system(f"/usr/sbin/postmap {self._config.mta.config.paths.local_recipient_maps}")
        os.system(f"/usr/sbin/postmap {self._config.mta.config.paths.virtual_mailbox_maps}")
        os.system(f"/usr/sbin/postmap {self._config.mta.config.paths.smtpd_sender_login_maps}")
        self._log.debug("Recompiled maps")

    def _write_header(self, f: TextIO):
        f.write(f"# AUTOMATICALLY GENERATED BY PORCUMAIL ON {datetime.datetime.now()}\n")
        f.write(f"# \n")
        f.write(f"# his file is generated by porcumail, and is kept in sync with the binary hash file.\n")
        f.write(f"\n")

    def _write_file__transport_maps(self):
        with open(self._config.mta.config.paths.transport_maps, "w") as f:
            self._write_header(f)
            for mailing_list in self._list_provider.get_lists():
                for address in mailing_list.porcumail_addresses:
                    f.write(f"{address}\t\tlmtp:[{self._config.lmtp.hostname}]:{self._config.lmtp.port}\n")
        self._log.debug("Updated transport_maps")

    def _write_file__local_recipient_maps(self):
        with open(self._config.mta.config.paths.local_recipient_maps, "w") as f:
            self._write_header(f)
            for mailing_list in self._list_provider.get_lists():
                for address in mailing_list.porcumail_addresses:
                    f.write(f"{address}\t\tlmtp:[{self._config.lmtp.hostname}]:{self._config.lmtp.port}\n")
        self._log.debug("Updated local_recipient_maps")

    def _write_file__virtual_mailbox_maps(self):
        with open(self._config.mta.config.paths.virtual_mailbox_maps, "w") as f:
            self._write_header(f)
            for mailing_list in self._list_provider.get_lists():
                for address in mailing_list.porcumail_addresses:
                    f.write(f"{address}\t\tlmtp:[{self._config.lmtp.hostname}]:{self._config.lmtp.port}\n")
        self._log.debug("Updated virtual_mailbox_maps")

    def _write_file__smtpd_sender_login_maps(self):
        with open(self._config.mta.config.paths.smtpd_sender_login_maps, "w") as f:
            self._write_header(f)
            for mailing_list in self._list_provider.get_lists():
                for address in mailing_list.porcumail_addresses:
                    f.write(f"{address}\t\t{self._config.smtp.username}\n")
        self._log.debug("Updated smtpd_sender_login_maps")


    def reconfigure(self):
        self._check_dirs()
        self._write_file__transport_maps()
        self._write_file__local_recipient_maps()
        self._write_file__virtual_mailbox_maps()
        self._write_file__smtpd_sender_login_maps()
        self._update_maps()
        self._log.info("Regenerated config & maps files")
